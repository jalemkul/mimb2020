* GENERATED BY CHARMM-GUI (http://www.charmm-gui.org) v2.0 on Jun, 05. 2018. JOBID=1528203469
* GENERATES ION CONFORMATION USING MONTE-CARLO SIMULATION
* 

DIMENS CHSIZE 3000000 MAXRES 3000000

! Read topology and parameter files
stream toppar.str

! Read PSF and Coordinates
open read unit 10 card name step1_pdbreader.psf
read psf  unit 10 card

open read unit 10 card name step2_orient.crd
read coor unit 10 card

define PROT sele all end

!Read the system information
stream step3_size.str
stream step4_components.str

! Read Lipids 
if isglip .eq. YES then
   open read unit 10 card name step4_lipid_glip.psf
   read psf  unit 10 card append

   open read unit 10 card name step4_lipid_glip.crd
   read coor unit 10 card append

   stream step3_glipid.str
endif

if ismemb .eq. YES then
   open read card unit 10 name step4_lipid_lipid.crd
   read sequence coor card unit 10
   generate MEMB setup warn first none last none

   open read unit 10 card name step4_lipid_lipid.crd
   read coor unit 10 card resid
endif

calc ncharge = int( ?cgtot )

!
! Concentration, Volume, and Number of Ions
!

set conc  =  0.15        ! M          
set zmemb =  20.0           ! ion exclusion membrane region
set posval   = 1
set negval   = 1

! protein volume, calculation with a grid spacing of 0.5
coor stat

calc dcel = 0.5
calc xdim = int ( ( ?xmax - ?xmin + 5.0 ) / @dcel ) + 1
calc ydim = int ( ( ?ymax - ?ymin + 5.0 ) / @dcel ) + 1
calc zdim = int ( ( ?zmax - ?zmin + 5.0 ) / @dcel ) + 1
calc space = @xdim * @ydim * @zdim

scalar wmain = radius
scalar wmain add 1.4    ! use solvent accessible surface for molecular volume
scalar 1 = wmain
scalar 2 set 6.0
coor volume hole space @space sele .not. resname TIP3 end

set sysvol = ?volume

IF BOXTYPE .ne. HEXA then
   calc volumn = ( @A * @B * @C ) - @sysvol
ENDIF

IF BOXTYPE .eq. HEXA THEN
   calc A = @A / cos ( 30.0 * ?pi / 180.0 )
   calc B = @B / cos ( 30.0 * ?pi / 180.0 )
   calc C = @C
   calc volumn = ( 3 / 8 * sqrt(3) * @A * @B * @C ) - @sysvol
ENDIF

calc npos = 0
calc nneg = 0
if ncharge .lt. 0 calc npos = int( abs( ?cgtot ) / @posval )
if ncharge .gt. 0 calc nneg = int( abs( ?cgtot ) / @negval )

calc diff   = int ( ?cgtot + @npos*@posval - @nneg*@negval )
label neutral
   if diff .gt. 0 calc nneg = @nneg + 1
   if diff .lt. 0 calc npos = @npos + 1
   calc diff   = int ( ?cgtot + @npos*@posval - @nneg*@negval )
if diff .ne. 0 goto neutral

if npos .lt. 0 stop ! something wrong
if nneg .lt. 0 stop ! something wrong

!
! Randomly place the ions
!

!Generate POT
if npos .gt. 0 then
   read sequence POT @npos
   generate POT warn
endif

!Generate CLA
if nneg .gt. 0 then
   read sequence CLA @nneg
   generate CLA warn
endif

calc nion = @npos + @nneg
if nion .eq. 0 goto continue

! initial positions for all ions

calc xpos = @A / 2.0
calc ypos = @B / 2.0
calc zpos = @C / 2.0 + @zcen

coor set xdir @xpos ydir @ypos zdir @zpos select segid POT .or. segid CLA end
cons fix sele .not. ( segid POT .or. segid CLA ) end

!
!Energy Setup
!

!Note eps=80, truncation at 10 Angstrom
nbonds atom switch vatom vswitch -
       ctonnb 10.0 ctofnb 10.0 cutnb 11.0 cutim 11.0 -
       inbfrq -1 imgfrq -1 wmin 0.1 cdie eps 80.0

!
! initial placement of ions
!

calc cntrand = 0

calc i   = 1
label doinit

    calc cntrand = @cntrand + 1
    if cntrand .gt. 100 stop ! ion placing may not work.. stop here

    calc j = @i
    set ion = POT

    if j .gt. @npos then
       set ion = CLA
       calc j  = @j - @npos
    endif
    
    define target select segid @ion .and. resid @j end

    calc xpos = @a * ( ?random - 0.5 )
    calc ypos = @b * ( ?random - 0.5 )
    calc zpos = @c * ( ?random - 0.5 ) + @zcen

    if zpos .gt. -15 if zpos .lt. 15 goto doinit
    
    coor set xdir @xpos  ydir @ypos  zdir @zpos select target end

    ! check if the ions are too close to protein
    define XXX sele PROT end
    if ?nsel .gt. 0 then
        coor dist cut 10.0 sele target end -
                           sele PROT .and. .not. hydrogen end
        if ?npair .gt. 0 goto doinit
    endif

    ! check if the ions are too close to solute 
    coor dist cut 4.5 sele target end -
                      sele ( .not. target ) .and. .not. hydrogen end
    if ?npair .gt. 0 goto doinit

calc cntrand = 0
increase i by 1
if i .le. @nion goto doinit

open write unit 10 card name step4.3_ion.pdb
write coor unit 10 pdb 
close unit 10

delete atom sele .not. ( segid POT .or. segid CLA ) end

open write unit 10 card name step4.3_pos.crd
write coor unit 10 card sele segid POT end
close unit 10

if npos .gt. 0 delete atom sele segid POT end

open write unit 10 card name step4.3_neg.crd
write coor unit 10 card sele segid CLA end
close unit 10

label continue 

open write unit 10 card name step4.3_pos.prm
write title unit 10
* set npos = @npos ! Number of positive ions
* set nneg = @nneg ! Number of negative ions
* set posid = POT
* set negid = CLA 
*

stop